(function(L,C){typeof exports=="object"&&typeof module<"u"?module.exports=C(require("cesium")):typeof define=="function"&&define.amd?define(["cesium"],C):(L=typeof globalThis<"u"?globalThis:L||self,L.ZCesium=C())})(this,function(){"use strict";var rt=Object.defineProperty;var at=(L,C,A)=>C in L?rt(L,C,{enumerable:!0,configurable:!0,writable:!0,value:A}):L[C]=A;var l=(L,C,A)=>at(L,typeof C!="symbol"?C+"":C,A);var L=typeof document<"u"?document.currentScript:null;class C{constructor(){l(this,"listeners");this.listeners=new Map([["drawStart",new Set],["drawUpdate",new Set],["drawEnd",new Set],["editStart",new Set],["editEnd",new Set]])}on(s,t){if(!this.listeners.has(s)){console.warn("Event binding must be one of 'drawStart', 'drawUpdate', or 'drawEnd'.");return}this.listeners.get(s).add(t)}off(s,t){this.listeners.has(s)&&this.listeners.get(s).delete(t)}dispatchEvent(s,t){this.listeners.has(s)&&this.listeners.get(s).forEach(e=>{e(t)})}}const A=100,O=1e-4,T=(r,s)=>[(r[0]+s[0])/2,(r[1]+s[1])/2],H=(r,s)=>{r&&(r.scene.screenSpaceCameraController.enableRotate=s)},v=(r,s)=>Math.sqrt(Math.pow(r[0]-s[0],2)+Math.pow(r[1]-s[1],2)),x=(r,s)=>{let t,e=Math.asin(Math.abs(s[1]-r[1])/v(r,s));return s[1]>=r[1]&&s[0]>=r[0]?t=e+Math.PI:s[1]>=r[1]&&s[0]<r[0]?t=Math.PI*2-e:s[1]<r[1]&&s[0]<r[0]?t=e:s[1]<r[1]&&s[0]>=r[0]&&(t=Math.PI-e),t},W=(r,s,t)=>{const e=x(s,r)-x(s,t);return e<0?e+Math.PI*2:e},b=(r,s,t)=>(t[1]-r[1])*(s[0]-r[0])>(s[1]-r[1])*(t[0]-r[0]),p=(r,s,t,e,i)=>{let n=x(r,s),o=i?n+t:n-t,a=e*Math.cos(o),h=e*Math.sin(o);return[s[0]+a,s[1]+h]},R=r=>{let s=0;return r&&Array.isArray(r)&&r.length>0&&r.forEach((t,e)=>{e<r.length-1&&(s+=v(t,r[e+1]))}),s},_=(r,s,t)=>{let e=r[0]-s[0],i=r[1]-s[1],n=Math.sqrt(e*e+i*i);e/=n,i/=n;let o=t[0]-s[0],a=t[1]-s[1],h=Math.sqrt(o*o+a*a);o/=h,a/=h;let c=e+o,u=i+a;return[c,u]},U=r=>{let s=1;switch(r){case r<=1:s=1;break;case r===2:s=2;break;case r===3:s=6;break;case r===24:s=24;break;case r===5:s=120;break;default:for(let t=1;t<=r;t++)s*=t;break}return s},j=(r,s)=>U(r)/(U(s)*U(r-s)),B=r=>{if(r.length<=2)return r;{let s=[],t=r.length-1;for(let e=0;e<=1;e+=.01){let[i,n]=[0,0];for(let o=0;o<=t;o++){let a=j(t,o),h=Math.pow(e,o),c=Math.pow(1-e,t-o);i+=a*h*c*r[o][0],n+=a*h*c*r[o][1]}s.push([i,n])}return s.push(r[t]),s}},M=r=>R(r)**.99,N=(r,s,t,e)=>{let i=_(s,t,e),[n,o,a,h,c]=[null,null,null,null,null],u=Math.sqrt(i[0]*i[0]+i[1]*i[1]),d=i[0]/u,P=i[1]/u,f=v(s,t),g=v(t,e);return u>O?b(s,t,e)?(a=r*f,h=t[0]-a*P,c=t[1]+a*d,n=[h,c],a=r*g,h=t[0]+a*P,c=t[1]-a*d,o=[h,c]):(a=r*f,h=t[0]+a*P,c=t[1]-a*d,n=[h,c],a=r*g,h=t[0]-a*P,c=t[1]+a*d,o=[h,c]):(h=t[0]+r*(s[0]-t[0]),c=t[1]+r*(s[1]-t[1]),n=[h,c],h=t[0]+r*(e[0]-t[0]),c=t[1]+r*(e[1]-t[1]),o=[h,c]),[n,o]},X=(r,s)=>{let t=0;return r===0?t=(s-1)**2/2:r===1?t=(-2*s**2+2*s+1)/2:r===2&&(t=s**2/2),t},G=r=>{if(r.length<=2)return r;const[s,t]=[2,[]],e=r.length-s-1;t.push(r[0]);for(let i=0;i<=e;i++)for(let n=0;n<=1;n+=.05){let[o,a]=[0,0];for(let h=0;h<=s;h++){const c=X(h,n);o+=c*r[i+h][0],a+=c*r[i+h][1]}t.push([o,a])}return t.push(r[r.length-1]),t},q=(r,s)=>{let[t,e,i,n,o]=[r[0],r[1],r[2],null,null];const h=N(0,t,e,i)[0],c=_(t,e,i);if(Math.sqrt(c[0]*c[0]+c[1]*c[1])>O){const d=T(t,e),P=t[0]-d[0],f=t[1]-d[1],m=2/v(t,e),w=-m*f,y=m*P,E=w*w-y*y,S=2*w*y,F=y*y-w*w,D=h[0]-d[0],k=h[1]-d[1];n=d[0]+E*D+S*k,o=d[1]+S*D+F*k}else n=t[0]+s*(e[0]-t[0]),o=t[1]+s*(e[1]-t[1]);return[n,o]},J=(r,s)=>{const t=r.length,e=r[t-3],i=r[t-2],n=r[t-1],a=N(0,e,i,n)[1],h=_(e,i,n),c=Math.sqrt(h[0]*h[0]+h[1]*h[1]);let[u,d]=[null,null];if(c>O){const P=T(i,n),f=n[0]-P[0],g=n[1]-P[1],w=2/v(i,n),y=-w*g,E=w*f,S=y*y-E*E,F=2*y*E,D=E*E-y*y,k=a[0]-P[0],V=a[1]-P[1];u=P[0]+S*k+F*V,d=P[1]+F*k+D*V}else u=n[0]+s*(i[0]-n[0]),d=n[1]+s*(i[1]-n[1]);return[u,d]},K=(r,s,t,e,i)=>{r=Math.max(Math.min(r,1),0);const[n,o]=[1-r,r*r],a=o*r,h=n*n,c=h*n,u=c*s[0]+3*h*r*t[0]+3*n*o*e[0]+a*i[0],d=c*s[1]+3*h*r*t[1]+3*n*o*e[1]+a*i[1];return[u,d]},Z=(r,s)=>{const t=q(s,r);let[e,i,n,o,a]=[null,null,null,[t],[]];for(let c=0;c<s.length-2;c++){[e,i,n]=[s[c],s[c+1],s[c+2]];const u=N(r,e,i,n);o=o.concat(u)}const h=J(s,r);h&&o.push(h);for(let c=0;c<s.length-1;c++){e=s[c],i=s[c+1],a.push(e);for(let u=0;u<A;u++){const d=K(u/A,e,o[c*2],o[c*2+1],i);a.push(d)}a.push(i)}return a};function Q(r){return JSON.parse(JSON.stringify(r))}class I{constructor(s,t,e){l(this,"cesium");l(this,"state","drawing");l(this,"category");l(this,"viewer");l(this,"handler",null);l(this,"dragEventHandler",null);l(this,"mainEntity",null);l(this,"lineEntity",null);l(this,"outlineEntity",null);l(this,"tempLineEntity",null);l(this,"centerPointEntity",null);l(this,"rotatePointEntity",null);l(this,"rotateLineEntity",null);l(this,"rotateHandler",null);l(this,"positions",[]);l(this,"controlPoints",[]);l(this,"points",[]);l(this,"controlPointsEventHandler",null);l(this,"entityId","");l(this,"style");l(this,"styleCache");l(this,"minPointsForShape",0);l(this,"eventDispatcher");l(this,"freehand");this.cesium=s,this.viewer=t,this.category=this.getCategory(),this.mergeStyle(e),this.cartesianToLnglat=this.cartesianToLnglat.bind(this),this.pixelToCartesian=this.pixelToCartesian.bind(this),this.eventDispatcher=new C,t.trackedEntity=void 0,this.onClick()}get centerPosition(){return this.cesium.BoundingSphere.fromPoints(this.points).center}get rotatePosition(){return this.cesium.Cartesian3.midpoint(this.centerPosition,this.getPoints()[0],new this.cesium.Cartesian3)}setState(s){this.state=s}getState(){return this.state}setGeometryPoints(s){this.positions=s}mergeStyle(s){this.category==="polygon"?this.style=Object.assign({material:this.cesium.Color.fromCssColorString("rgba(109,207,201,0.8)"),outlineMaterial:this.cesium.Color.fromCssColorString("#0000ff"),outlineWidth:2},s):this.category==="polyline"?this.style=Object.assign({material:this.cesium.Color.fromCssColorString("#0000ff"),lineWidth:2},s):this.category==="point"&&(this.style=Object.assign({material:new this.cesium.Color,size:1},s)),this.styleCache=Q(this.style)}updateStyle(s){this.mergeStyle(s),this.category==="polygon"&&(this.mainEntity&&(this.mainEntity.polygon.material=this.style.material),this.lineEntity&&(this.lineEntity.polyline.material=this.style.material),this.outlineEntity&&(this.outlineEntity.polygon.material=this.style.outlineMaterial),this.outlineEntity&&(this.outlineEntity.polygon.outlineWidth=this.style.outlineWidth)),this.category==="polyline"&&(this.lineEntity&&(this.lineEntity.polyline.material=this.style.material),this.lineEntity&&(this.lineEntity.polyline.width=this.style.lineWidth)),this.category==="point"&&this.lineEntity&&(this.lineEntity.billboard.scale=this.style.size)}onClick(){this.handler=new this.cesium.ScreenSpaceEventHandler(this.viewer.canvas),this.handler.setInputAction(s=>{const t=this.viewer.scene.pick(s.position),e=this.cesium.defined(t)&&t.id instanceof this.cesium.Entity,i=this.mainEntity;if(this.state==="drawing"){const n=this.pixelToCartesian(s.position),o=this.getPoints();if(!n||!this.freehand&&o.length>0&&!this.checkDistance(n,o[o.length-1]))return;this.addPoint(n),this.getPoints().length===1&&this.eventDispatcher.dispatchEvent("drawStart"),this.eventDispatcher.dispatchEvent("drawUpdate",n)}else this.state==="edit"?(!e||i.id!==t.id.id)&&(this.setState("static"),this.removeControlPoints(),this.disableDrag(),this.eventDispatcher.dispatchEvent("editEnd",this.getPoints())):this.state==="static"&&e&&i.id===t.id.id&&this.cesium.defined(this.mainEntity)&&(this.setState("edit"),this.addControlPoints(),this.draggable(),this.eventDispatcher.dispatchEvent("editStart"))},this.cesium.ScreenSpaceEventType.LEFT_CLICK)}onMouseMove(){var s;(s=this.handler)==null||s.setInputAction(t=>{const e=this.getPoints(),i=this.pixelToCartesian(t.endPosition);i&&this.checkDistance(i,e[e.length-1])&&this.updateMovingPoint(i,e.length)},this.cesium.ScreenSpaceEventType.MOUSE_MOVE)}onDoubleClick(){var s;(s=this.handler)==null||s.setInputAction(()=>{this.state==="drawing"&&this.finishDrawing()},this.cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK)}finishDrawing(){this.category==="polygon"&&this.lineEntity&&this.viewer.entities.remove(this.lineEntity),this.removeMoveListener(),this.setState("edit"),this.addControlPoints(),this.draggable();const s=this.mainEntity;this.entityId=s.id,this.eventDispatcher.dispatchEvent("drawEnd",this.getPoints())}addControlPoints(){const s=this.getPoints();this.category!=="point"&&(this.addCenterPoint(),this.addRotatePoint(),this.controlPoints=s.map(n=>this.viewer.entities.add({position:n,point:{pixelSize:10,heightReference:this.cesium.HeightReference.CLAMP_TO_GROUND,color:this.cesium.Color.BLUE}})));let t=!1,e=null,i;this.controlPointsEventHandler=new this.cesium.ScreenSpaceEventHandler(this.viewer.canvas),this.controlPointsEventHandler.setInputAction(n=>{var a;const o=this.viewer.scene.pick(n.position);if(this.cesium.defined(o)){for(let h=0;h<this.controlPoints.length;h++)if(o.id.id===this.controlPoints[h].id){t=!0,e=this.controlPoints[h],i=(a=e.position)==null?void 0:a.getValue(this.cesium.JulianDate.now()),e.index=h;break}H(this.viewer,!1)}},this.cesium.ScreenSpaceEventType.LEFT_DOWN),this.controlPointsEventHandler.setInputAction(n=>{if(t&&e){const o=this.viewer.camera.pickEllipsoid(n.endPosition,this.viewer.scene.globe.ellipsoid);o&&(e.position.setValue(o),this.updateDraggingPoint(o,e.index))}},this.cesium.ScreenSpaceEventType.MOUSE_MOVE),this.controlPointsEventHandler.setInputAction(()=>{e&&!this.cesium.Cartesian3.equals(i,e.position._value)&&(this.addCenterPoint(),this.addRotatePoint(),this.eventDispatcher.dispatchEvent("drawUpdate",e.position._value)),t=!1,e=null,H(this.viewer,!0)},this.cesium.ScreenSpaceEventType.LEFT_UP)}addCenterPoint(){this.centerPointEntity?this.centerPointEntity.position=new this.cesium.ConstantPositionProperty(this.centerPosition):this.centerPointEntity=this.viewer.entities.add({position:this.centerPosition,point:{pixelSize:10,heightReference:this.cesium.HeightReference.CLAMP_TO_GROUND,color:this.cesium.Color.RED}})}addRotatePoint(){if(this.rotatePointEntity)this.rotatePointEntity.position=new this.cesium.ConstantPositionProperty(this.rotatePosition);else{this.rotatePointEntity=this.viewer.entities.add({position:this.rotatePosition,point:{pixelSize:10,heightReference:this.cesium.HeightReference.CLAMP_TO_GROUND,color:this.cesium.Color.YELLOW}}),this.rotateHandler=new this.cesium.ScreenSpaceEventHandler(this.viewer.canvas);let s=!1;this.rotateHandler.setInputAction(t=>{const e=this.viewer.scene.pick(t.position);this.cesium.defined(e)&&e.id.id===this.rotatePointEntity.id&&(s=!0,this.addRotateLine(),H(this.viewer,!1))},this.cesium.ScreenSpaceEventType.LEFT_DOWN),this.rotateHandler.setInputAction(t=>{if(s&&this.rotatePointEntity){const e=this.viewer.camera.pickEllipsoid(t.endPosition,this.viewer.scene.globe.ellipsoid);if(e){const i=this.cartesianToLnglat(e),n=this.cartesianToLnglat(this.centerPosition),o=this.cartesianToLnglat(this.rotatePosition),a=b(n,o,i),h=a?W(i,n,o):W(o,n,i);this.controlPoints.forEach((c,u)=>{var y;const d=(y=c.position)==null?void 0:y.getValue(this.cesium.JulianDate.now()),P=this.cartesianToLnglat(d),f=v(P,n),g=p(P,n,h,f,a),m=this.viewer.scene.globe.ellipsoid.cartesianToCartographic(d).height,w=this.cesium.Cartesian3.fromDegrees(...g,m);c.position=new this.cesium.ConstantPositionProperty(w),this.updateDraggingPoint(w,u)}),this.addRotatePoint()}}},this.cesium.ScreenSpaceEventType.MOUSE_MOVE),this.rotateHandler.setInputAction(()=>{s&&(this.addCenterPoint(),this.addRotatePoint()),this.viewer.entities.remove(this.rotateLineEntity),this.rotateLineEntity=null,s=!1,console.log("leftUp"),H(this.viewer,!0),this.eventDispatcher.dispatchEvent("drawUpdate")},this.cesium.ScreenSpaceEventType.LEFT_UP)}}addRotateLine(){const s=new this.cesium.CallbackProperty(()=>[this.centerPosition,this.rotatePosition],!1);this.rotateLineEntity||(this.rotateLineEntity=this.viewer.entities.add({polyline:{positions:s,clampToGround:!0,width:2,material:new this.cesium.PolylineDashMaterialProperty({color:this.cesium.Color.YELLOW})}}))}draggable(){let s=!1,t;this.dragEventHandler=new this.cesium.ScreenSpaceEventHandler(this.viewer.canvas),this.dragEventHandler.setInputAction(e=>{const i=this.viewer.scene.camera.getPickRay(e.position);if(i){const n=this.viewer.scene.globe.pick(i,this.viewer.scene),o=this.viewer.scene.pick(e.position);if(this.cesium.defined(o)&&o.id instanceof this.cesium.Entity){const a=o.id;this.isCurrentEntity(a.id)&&(s=!0,t=n,this.viewer.scene.screenSpaceCameraController.enableRotate=!1)}}},this.cesium.ScreenSpaceEventType.LEFT_DOWN),this.dragEventHandler.setInputAction(e=>{if(s&&t){const i=this.pixelToCartesian(e.endPosition);if(i){const n=this.cesium.Cartesian3.subtract(i,t,new this.cesium.Cartesian3),o=this.positions.map(a=>this.cesium.Cartesian3.add(a,n,new this.cesium.Cartesian3));this.points=this.points.map(a=>this.cesium.Cartesian3.add(a,n,new this.cesium.Cartesian3)),this.controlPoints.map(a=>{var u;const h=(u=a.position)==null?void 0:u.getValue(this.cesium.JulianDate.now()),c=this.cesium.Cartesian3.add(h,n,new this.cesium.Cartesian3);a.position=new this.cesium.ConstantPositionProperty(c)}),this.setGeometryPoints(o),this.category!=="point"?(this.addCenterPoint(),this.addRotatePoint()):this.updatePoint(),t=i}}else if(this.viewer.scene.camera.getPickRay(e.endPosition)){const n=this.viewer.scene.pick(e.endPosition);if(this.cesium.defined(n)&&n.id instanceof this.cesium.Entity){const o=n.id;this.isCurrentEntity(o.id)?this.viewer.scene.canvas.style.cursor="move":this.viewer.scene.canvas.style.cursor="default"}else this.viewer.scene.canvas.style.cursor="default"}},this.cesium.ScreenSpaceEventType.MOUSE_MOVE),this.dragEventHandler.setInputAction(()=>{s=!1,t=void 0,this.viewer.scene.screenSpaceCameraController.enableRotate=!0},this.cesium.ScreenSpaceEventType.LEFT_UP)}disableDrag(){var s,t,e;(s=this.dragEventHandler)==null||s.removeInputAction(this.cesium.ScreenSpaceEventType.LEFT_DOWN),(t=this.dragEventHandler)==null||t.removeInputAction(this.cesium.ScreenSpaceEventType.MOUSE_MOVE),(e=this.dragEventHandler)==null||e.removeInputAction(this.cesium.ScreenSpaceEventType.LEFT_UP)}getCategory(){return"polygon"}cartesianToLnglat(s){const t=this.viewer.scene.globe.ellipsoid.cartesianToCartographic(s),e=this.cesium.Math.toDegrees(t.latitude);return[this.cesium.Math.toDegrees(t.longitude),e]}pixelToCartesian(s){const t=this.viewer.camera.getPickRay(s);return this.viewer.scene.globe.pick(t,this.viewer.scene)}checkDistance(s,t){return this.cesium.Cartesian3.distance(s,t)>10}removeClickListener(){var s;(s=this.handler)==null||s.removeInputAction(this.cesium.ScreenSpaceEventType.LEFT_CLICK)}removeMoveListener(){var s;(s=this.handler)==null||s.removeInputAction(this.cesium.ScreenSpaceEventType.MOUSE_MOVE)}removeDoubleClickListener(){var s;(s=this.handler)==null||s.removeInputAction(this.cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK)}removeControlPoints(){var s,t,e,i,n;this.controlPoints.length>0&&(this.controlPoints.forEach(o=>{this.viewer.entities.remove(o)}),this.centerPointEntity&&(this.viewer.entities.remove(this.centerPointEntity),this.centerPointEntity=null),this.rotatePointEntity&&(this.viewer.entities.remove(this.rotatePointEntity),this.rotatePointEntity=null,(s=this.rotateHandler)==null||s.destroy(),this.rotateHandler=null),this.rotateLineEntity&&(this.viewer.entities.remove(this.rotateLineEntity),this.rotateLineEntity=null),(t=this.controlPointsEventHandler)==null||t.removeInputAction(this.cesium.ScreenSpaceEventType.LEFT_DOWN),(e=this.controlPointsEventHandler)==null||e.removeInputAction(this.cesium.ScreenSpaceEventType.MOUSE_MOVE),(i=this.controlPointsEventHandler)==null||i.removeInputAction(this.cesium.ScreenSpaceEventType.LEFT_UP),(n=this.controlPointsEventHandler)==null||n.destroy(),this.controlPointsEventHandler=null)}remove(){var s;this.category==="polygon"?(this.viewer.entities.remove(this.mainEntity),this.viewer.entities.remove(this.outlineEntity),this.mainEntity=null,this.outlineEntity=null,this.lineEntity=null):this.category==="polyline"&&this.viewer.entities.remove(this.lineEntity),this.removeClickListener(),this.removeMoveListener(),this.removeDoubleClickListener(),this.removeControlPoints(),(s=this.handler)==null||s.destroy(),this.handler=null}drawPolygon(){const s=()=>new this.cesium.PolygonHierarchy(this.positions);if(!this.mainEntity){const t=this.style;this.mainEntity=this.viewer.entities.add({polygon:new this.cesium.PolygonGraphics({hierarchy:new this.cesium.CallbackProperty(s,!1),show:!0,material:t.material})}),this.outlineEntity=this.viewer.entities.add({polyline:{positions:new this.cesium.CallbackProperty(()=>[...this.positions,this.positions[0]],!1),width:t.borderWidth,material:t.outlineMaterial,clampToGround:!0}})}}drawLine(){if(!this.lineEntity){const s=this.style;this.lineEntity=this.addLineEntity(s)}}addTempLine(){if(!this.tempLineEntity){const s=this.style,t={material:s.outlineMaterial,lineWidth:s.borderWidth};this.tempLineEntity=this.addLineEntity(t)}}addLineEntity(s){return this.viewer.entities.add({polyline:{positions:new this.cesium.CallbackProperty(()=>this.positions,!1),width:s.width,material:s.material,clampToGround:!0}})}removeTempLine(){this.tempLineEntity&&this.viewer.entities.remove(this.tempLineEntity)}on(s,t){this.eventDispatcher.on(s,t)}off(s,t){this.eventDispatcher.off(s,t)}isCurrentEntity(s){return this.entityId===s}addPoint(s){}getPoints(){return[new this.cesium.Cartesian3]}getStyle(){return this.style}updateMovingPoint(s,t){}updateDraggingPoint(s,t){}createGraphic(s){return s}updatePoint(){}}class $ extends I{constructor(t,e,i){super(t,e,i);l(this,"points",[]);l(this,"arrowLengthScale",5);l(this,"maxArrowLength",2);l(this,"tailWidthFactor");l(this,"neckWidthFactor");l(this,"headWidthFactor");l(this,"headAngle");l(this,"neckAngle");l(this,"minPointsForShape");this.cesium=t,this.tailWidthFactor=.1,this.neckWidthFactor=.2,this.headWidthFactor=.25,this.headAngle=Math.PI/8.5,this.neckAngle=Math.PI/13,this.minPointsForShape=2,this.setState("drawing")}getCategory(){return"polygon"}addPoint(t){if(this.points.length<2&&(this.points.push(t),this.onMouseMove()),this.points.length===2){const e=this.createGraphic(this.points);this.setGeometryPoints(e),this.drawPolygon(),this.finishDrawing()}}updateMovingPoint(t){const e=[...this.points,t],i=this.createGraphic(e);this.setGeometryPoints(i),this.drawPolygon()}updateDraggingPoint(t,e){this.points[e]=t;const i=this.createGraphic(this.points);this.setGeometryPoints(i),this.drawPolygon()}createGraphic(t){const[e,i]=t.map(this.cartesianToLnglat),n=M([e,i]),o=n*this.tailWidthFactor,a=n*this.neckWidthFactor,h=n*this.headWidthFactor,c=p(i,e,Math.PI/2,o,!0),u=p(i,e,Math.PI/2,o,!1),d=p(e,i,this.headAngle,h,!1),P=p(e,i,this.headAngle,h,!0),f=p(e,i,this.neckAngle,a,!1),g=p(e,i,this.neckAngle,a,!0),m=[...c,...f,...d,...i,...P,...g,...u,...e];return this.cesium.Cartesian3.fromDegreesArray(m)}getPoints(){return this.points}}class tt extends I{constructor(t,e,i){super(t,e,i);l(this,"points",[]);l(this,"arrowLengthScale",5);l(this,"maxArrowLength",2);l(this,"neckWidthFactor");l(this,"headWidthFactor");l(this,"headHeightFactor");l(this,"neckHeightFactor");l(this,"connPoint");l(this,"tempPoint4");l(this,"minPointsForShape");l(this,"llBodyPnts",[]);l(this,"rrBodyPnts",[]);l(this,"curveControlPointLeft",null);l(this,"curveControlPointRight",null);l(this,"isClockWise",!1);this.cesium=t,this.headHeightFactor=.25,this.headWidthFactor=.3,this.neckHeightFactor=.85,this.neckWidthFactor=.15,this.connPoint=[0,0],this.tempPoint4=[0,0],this.minPointsForShape=4,this.setState("drawing")}getCategory(){return"polygon"}addPoint(t){this.points.push(t),this.points.length<2?this.onMouseMove():this.points.length===2?(this.setGeometryPoints(this.points),this.drawPolygon()):this.points.length===3?this.lineEntity&&this.viewer.entities.remove(this.lineEntity):this.finishDrawing()}finishDrawing(){this.curveControlPointLeft=this.cesium.Cartesian3.fromDegrees(this.llBodyPnts[2][0],this.llBodyPnts[2][1]),this.curveControlPointRight=this.cesium.Cartesian3.fromDegrees(this.rrBodyPnts[1][0],this.rrBodyPnts[1][1]),super.finishDrawing()}updateMovingPoint(t){const e=[...this.points,t];if(this.setGeometryPoints(e),e.length===2)this.addTempLine();else if(e.length>2){this.removeTempLine();const i=this.createGraphic(e);this.setGeometryPoints(i),this.drawPolygon()}}updateDraggingPoint(t,e){this.points[e]=t;const i=this.createGraphic(this.points);this.setGeometryPoints(i),this.drawPolygon()}createGraphic(t){const e=t.map(k=>this.cartesianToLnglat(k)),[i,n,o]=[e[0],e[1],e[2]],a=e.length;a===3?(this.tempPoint4=this.getTempPoint4(i,n,o),this.connPoint=T(i,n)):a===4?(this.tempPoint4=e[3],this.connPoint=T(i,n)):(this.tempPoint4=e[3],this.connPoint=e[4]);let h,c;this.isClockWise=b(i,n,o),this.isClockWise?(h=this.getArrowPoints(i,this.connPoint,this.tempPoint4,!1),c=this.getArrowPoints(this.connPoint,n,o,!0)):(h=this.getArrowPoints(n,this.connPoint,o,!1),c=this.getArrowPoints(this.connPoint,i,this.tempPoint4,!0));const u=h.length,d=(u-5)/2,P=h.slice(0,d),f=h.slice(d,d+5);let g=h.slice(d+5,u);this.llBodyPnts=P;let m=c.slice(0,d);const w=c.slice(d,d+5),y=c.slice(d+5,u);this.rrBodyPnts=y,m=B(m);const E=B(y.concat(P.slice(1)));g=B(g);const S=m.concat(w,E,f,g),F=[].concat(...S);return this.cesium.Cartesian3.fromDegreesArray(F)}getTempPoint4(t,e,i){const n=T(t,e),o=v(n,i),a=W(t,n,i);let h=[0,0],c,u,d;return a<Math.PI/2?(c=o*Math.sin(a),u=o*Math.cos(a),d=p(t,n,Math.PI/2,c,!1),h=p(n,d,Math.PI/2,u,!0)):a>=Math.PI/2&&a<Math.PI?(c=o*Math.sin(Math.PI-a),u=o*Math.cos(Math.PI-a),d=p(t,n,Math.PI/2,c,!1),h=p(n,d,Math.PI/2,u,!1)):a>=Math.PI&&a<Math.PI*1.5?(c=o*Math.sin(a-Math.PI),u=o*Math.cos(a-Math.PI),d=p(t,n,Math.PI/2,c,!0),h=p(n,d,Math.PI/2,u,!0)):(c=o*Math.sin(Math.PI*2-a),u=o*Math.cos(Math.PI*2-a),d=p(t,n,Math.PI/2,c,!0),h=p(n,d,Math.PI/2,u,!1)),h}getArrowPoints(t,e,i,n){const o=T(t,e),a=v(o,i);let h=p(i,o,0,a*.3,!0),c=p(i,o,0,a*.5,!0);h=p(o,h,Math.PI/2,a/5,n),c=p(o,c,Math.PI/2,a/4,n);const u=[o,h,c,i],d=this.getArrowHeadPoints(u);if(d&&Array.isArray(d)&&d.length>0){const P=d[0],f=d[4],g=v(t,e)/M(u)/2,m=this.getArrowBodyPoints(u,P,f,g);if(m){const w=m.length;let y=m.slice(0,w/2),E=m.slice(w/2,w);return y.push(P),E.push(f),y=y.reverse(),y.push(e),E=E.reverse(),E.push(t),y.reverse().concat(d,E)}}else throw new Error("Interpolation Error");return[]}getArrowBodyPoints(t,e,i,n){const o=R(t),h=M(t)*n,c=v(e,i),u=(h-c)/2;let d=0,P=[],f=[];for(let g=1;g<t.length-1;g++){const m=W(t[g-1],t[g],t[g+1])/2;d+=v(t[g-1],t[g]);const w=(h/2-d/o*u)/Math.sin(m),y=p(t[g-1],t[g],Math.PI-m,w,!0),E=p(t[g-1],t[g],m,w,!1);P.push(y),f.push(E)}return P.concat(f)}getArrowHeadPoints(t){const i=M(t)*this.headHeightFactor,n=t[t.length-1],o=i*this.headWidthFactor,a=i*this.neckWidthFactor,h=i*this.neckHeightFactor,c=p(t[t.length-2],n,0,i,!0),u=p(t[t.length-2],n,0,h,!0),d=p(n,c,Math.PI/2,o,!1),P=p(n,c,Math.PI/2,o,!0),f=p(n,u,Math.PI/2,a,!1),g=p(n,u,Math.PI/2,a,!0);return[f,d,n,P,g]}getPoints(){return this.points}getBezierControlPointforGrowthAnimation(){return this.isClockWise?{left:this.curveControlPointLeft,right:this.curveControlPointRight}:{right:this.curveControlPointLeft,left:this.curveControlPointRight}}}class et extends I{constructor(t,e,i){super(t,e,i);l(this,"points",[]);l(this,"arrowLengthScale",5);l(this,"maxArrowLength",2);l(this,"tailWidthFactor");l(this,"neckWidthFactor");l(this,"headWidthFactor");l(this,"headAngle");l(this,"neckAngle");l(this,"minPointsForShape");this.cesium=t,this.tailWidthFactor=.3,this.neckWidthFactor=.17,this.headWidthFactor=.3,this.headAngle=Math.PI/2.8,this.neckAngle=Math.PI/4.4,this.minPointsForShape=2,this.setState("drawing")}getCategory(){return"polygon"}addPoint(t){if(this.points.length<2&&(this.points.push(t),this.onMouseMove()),this.points.length===2){const e=this.createGraphic(this.points);this.setGeometryPoints(e),this.drawPolygon(),this.finishDrawing()}}updateMovingPoint(t){const e=[...this.points,t],i=this.createGraphic(e);this.setGeometryPoints(i),this.drawPolygon()}updateDraggingPoint(t,e){this.points[e]=t;const i=this.createGraphic(this.points);this.setGeometryPoints(i),this.drawPolygon()}createGraphic(t){const[e,i]=t.map(this.cartesianToLnglat),n=M([e,i]),o=n*this.tailWidthFactor,a=n*this.neckWidthFactor,h=n*this.headWidthFactor,c=p(i,e,Math.PI/2,o,!0),u=p(i,e,Math.PI/2,o,!1),d=p(e,i,this.headAngle,h,!1),P=p(e,i,this.headAngle,h,!0),f=p(e,i,this.neckAngle,a,!1),g=p(e,i,this.neckAngle,a,!0),m=[...c,...f,...d,...i,...P,...g,...u,...e];return this.cesium.Cartesian3.fromDegreesArray(m)}getPoints(){return this.points}}class Y extends I{constructor(t,e,i){super(t,e,i);l(this,"points",[]);l(this,"headHeightFactor");l(this,"headWidthFactor");l(this,"neckHeightFactor");l(this,"neckWidthFactor");l(this,"headTailFactor");l(this,"minPointsForShape");this.cesium=t,this.headHeightFactor=.18,this.headWidthFactor=.3,this.neckHeightFactor=.85,this.neckWidthFactor=.15,this.headTailFactor=.8,this.minPointsForShape=3,this.setState("drawing"),this.onDoubleClick()}getCategory(){return"polygon"}addPoint(t){this.points.push(t),this.points.length<2?this.onMouseMove():this.points.length===2&&(this.setGeometryPoints(this.points),this.drawPolygon())}updateMovingPoint(t){const e=[...this.points,t];if(this.setGeometryPoints(e),e.length===2)this.addTempLine();else{this.removeTempLine();const i=this.createGraphic(e);this.setGeometryPoints(i),this.drawPolygon()}}createGraphic(t){const e=t.map(S=>this.cartesianToLnglat(S));let[i,n]=[e[0],e[1]];b(e[0],e[1],e[2])&&(i=e[1],n=e[0]);const a=[T(i,n)].concat(e.slice(2)),h=this.getArrowHeadPoints(a,i,n),[c,u]=[h[0],h[4]],d=v(i,n)/M(a),P=this.getArrowBodyPoints(a,c,u,d),f=P.length;let g=[i].concat(P.slice(0,f/2));g.push(c);let m=[n].concat(P.slice(f/2,f));m.push(u),g=G(g),m=G(m);const w=g.concat(h,m.reverse()),y=[].concat(...w);return this.cesium.Cartesian3.fromDegreesArray(y)}getPoints(){return this.points}getArrowHeadPoints(t,e,i){try{let n=M(t),o=n*this.headHeightFactor;const a=t[t.length-1];n=v(a,t[t.length-2]);const h=v(e,i);o>h*this.headTailFactor&&(o=h*this.headTailFactor);const c=o*this.headWidthFactor,u=o*this.neckWidthFactor;o=o>n?n:o;const d=o*this.neckHeightFactor,P=p(t[t.length-2],a,0,o,!0),f=p(t[t.length-2],a,0,d,!0),g=p(a,P,Math.PI/2,c,!1),m=p(a,P,Math.PI/2,c,!0),w=p(a,f,Math.PI/2,u,!1),y=p(a,f,Math.PI/2,u,!0);return[w,g,a,m,y]}catch(n){console.log(n)}}getArrowBodyPoints(t,e,i,n){const o=R(t),h=M(t)*n,c=v(e,i),u=(h-c)/2;let[d,P,f]=[0,[],[]];for(let g=1;g<t.length-1;g++){const m=W(t[g-1],t[g],t[g+1])/2;d+=v(t[g-1],t[g]);const w=(h/2-d/o*u)/Math.sin(m),y=p(t[g-1],t[g],Math.PI-m,w,!0),E=p(t[g-1],t[g],m,w,!1);P.push(y),f.push(E)}return P.concat(f)}updateDraggingPoint(t,e){this.points[e]=t;const i=this.createGraphic(this.points);this.setGeometryPoints(i),this.drawPolygon()}}class it extends Y{constructor(t,e,i){super(t,e,i);l(this,"points",[]);l(this,"headHeightFactor");l(this,"headWidthFactor");l(this,"neckHeightFactor");l(this,"neckWidthFactor");l(this,"headTailFactor");l(this,"tailWidthFactor");l(this,"swallowTailFactor");l(this,"swallowTailPnt");this.cesium=t,this.headHeightFactor=.18,this.headWidthFactor=.3,this.neckHeightFactor=.85,this.neckWidthFactor=.15,this.tailWidthFactor=.1,this.headTailFactor=.8,this.swallowTailFactor=1,this.swallowTailPnt=[0,0],this.minPointsForShape=3}createGraphic(t){const e=t.map(k=>this.cartesianToLnglat(k));let[i,n]=[e[0],e[1]];b(e[0],e[1],e[2])&&(i=e[1],n=e[0]);const a=[T(i,n)].concat(e.slice(2)),h=this.getArrowHeadPoints(a,i,n),[c,u]=[h[0],h[4]],d=v(i,n),P=M(a),f=P*this.tailWidthFactor*this.swallowTailFactor;this.swallowTailPnt=p(a[1],a[0],0,f,!0);const g=d/P,m=this.getArrowBodyPoints(a,c,u,g),w=m.length;let y=[i].concat(m.slice(0,w/2));y.push(c);let E=[n].concat(m.slice(w/2,w));E.push(u),y=G(y),E=G(E);const S=y.concat(h,E.reverse(),[this.swallowTailPnt,y[0]]),F=[].concat(...S);return this.cesium.Cartesian3.fromDegreesArray(F)}}class st extends I{constructor(t,e,i){super(t,e,i);l(this,"points",[]);l(this,"arrowLengthScale",5);l(this,"maxArrowLength",3e6);l(this,"minPointsForShape");this.cesium=t,this.minPointsForShape=2,this.setState("drawing")}getCategory(){return"polyline"}addPoint(t){if(this.points.length<2&&(this.points.push(t),this.onMouseMove()),this.points.length===2){const e=this.createGraphic(this.points);this.setGeometryPoints(e),this.drawLine(),this.mainEntity=this.lineEntity,this.finishDrawing()}}updateMovingPoint(t){const e=[...this.points,t],i=this.createGraphic(e);this.setGeometryPoints(i),this.drawLine()}updateDraggingPoint(t,e){this.points[e]=t;const i=this.createGraphic(this.points);this.setGeometryPoints(i),this.drawLine()}createGraphic(t){const[e,i]=t.map(this.cartesianToLnglat);let o=v(e,i)/this.arrowLengthScale;o=o>this.maxArrowLength?this.maxArrowLength:o;const a=p(e,i,Math.PI/6,o/2,!1),h=p(e,i,Math.PI/6,o/2,!0),c=[...e,...i,...a,...i,...h];return this.cesium.Cartesian3.fromDegreesArray(c)}getPoints(){return this.points}}class nt extends I{constructor(t,e,i){super(t,e,i);l(this,"points",[]);l(this,"arrowLengthScale",5);l(this,"maxArrowLength",3e6);l(this,"t");l(this,"minPointsForShape");this.cesium=t,this.t=.3,this.minPointsForShape=2,this.setState("drawing"),this.onDoubleClick()}getCategory(){return"polyline"}addPoint(t){this.points.push(t),this.points.length<2&&this.onMouseMove()}updateMovingPoint(t){const e=[...this.points,t];let i=this.createGraphic(e);this.setGeometryPoints(i),this.drawLine(),this.mainEntity=this.lineEntity}createStraightArrow(t){const[e,i]=t.map(this.cartesianToLnglat);let o=v(e,i)/this.arrowLengthScale;o=o>this.maxArrowLength?this.maxArrowLength:o;const a=p(e,i,Math.PI/6,o/2,!1),h=p(e,i,Math.PI/6,o/2,!0),c=[...e,...i,...a,...i,...h];return this.cesium.Cartesian3.fromDegreesArray(c)}updateDraggingPoint(t,e){this.points[e]=t;const i=this.createGraphic(this.points);this.setGeometryPoints(i),this.drawLine(),this.mainEntity=this.lineEntity}createGraphic(t){const e=t.map(f=>this.cartesianToLnglat(f));if(t.length===2)return this.createStraightArrow(t);const i=Z(this.t,e),n=e[e.length-1];let a=R(e)/this.arrowLengthScale;a=a>this.maxArrowLength?this.maxArrowLength:a;const h=p(i[i.length-2],i[i.length-1],Math.PI/6,a/2,!1),c=p(i[i.length-2],i[i.length-1],Math.PI/6,a/2,!0),d=[...[].concat(...i),...h,...n,...c];return this.cesium.Cartesian3.fromDegreesArray(d)}getPoints(){return this.points}}class ot extends I{constructor(t,e,i){super(t,e,i);l(this,"iconUrl");this.style=i,this.iconUrl=(i==null?void 0:i.iconUrl)||"point.png"}getCategory(){return"point"}addPoint(t){this.points.push(t),this.setGeometryPoints([t]),this.drawPoint(),this.finishDrawing()}getPoints(){return this.points}drawPoint(){this.mainEntity=this.viewer.entities.add({position:this.positions[0],billboard:{image:new URL(Object.assign({})[`./icon/${this.iconUrl}`],typeof document>"u"&&typeof location>"u"?require("url").pathToFileURL(__filename).href:typeof document>"u"?location.href:L&&L.src||new URL("ZCesium.umd.js",document.baseURI).href).href,horizontalOrigin:this.cesium.HorizontalOrigin.CENTER,verticalOrigin:this.cesium.VerticalOrigin.CENTER,scale:Number(this.style.size)||1,heightReference:this.cesium.HeightReference.CLAMP_TO_GROUND}})}updatePoint(){this.mainEntity.position=new this.cesium.ConstantPositionProperty(this.positions[0])}}const z={IconPoint:ot,FineArrow:$,PincerArrow:tt,AttackArrow:et,SingleArrow:Y,SwallowtailArrow:it,StraightLineArrow:st,CurvedLineArrow:nt,createGeometryFromData:(r,s,t)=>{}};return z.createGeometryFromData=(r,s,t)=>{const{type:e,style:i,points:n}=t,o=new z[e](r,s,i);o.points=n;const a=o.createGraphic(n);return o.setGeometryPoints(a),o.type=="polygon"?o.drawPolygon():o.type=="polyline"?o.drawLine():o.type=="point"&&o.drawPoint(),o.finishDrawing(),o.onClick(),o},z});
